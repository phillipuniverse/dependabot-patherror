"""
    Routing API v8

    A location service providing customizable route calculations for a variety of vehicle types as well as pedestrian modes.  # noqa: E501

    The version of the OpenAPI document: 8.22.2
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import routing
from routing.model.agency import Agency
from routing.model.attribution import Attribution
from routing.model.fare import Fare
from routing.model.notice import Notice
from routing.model.offset_action import OffsetAction
from routing.model.passthrough import Passthrough
from routing.model.pedestrian_section import PedestrianSection
from routing.model.routing_zone import RoutingZone
from routing.model.toll_cost import TollCost
from routing.model.transit_departure import TransitDeparture
from routing.model.transit_incident import TransitIncident
from routing.model.transit_post_action import TransitPostAction
from routing.model.transit_pre_action import TransitPreAction
from routing.model.transit_section import TransitSection
from routing.model.transit_span import TransitSpan
from routing.model.transit_stop import TransitStop
from routing.model.transit_transport import TransitTransport
from routing.model.vehicle_section import VehicleSection
from routing.model.web_link import WebLink
globals()['Agency'] = Agency
globals()['Attribution'] = Attribution
globals()['Fare'] = Fare
globals()['Notice'] = Notice
globals()['OffsetAction'] = OffsetAction
globals()['Passthrough'] = Passthrough
globals()['PedestrianSection'] = PedestrianSection
globals()['RoutingZone'] = RoutingZone
globals()['TollCost'] = TollCost
globals()['TransitDeparture'] = TransitDeparture
globals()['TransitIncident'] = TransitIncident
globals()['TransitPostAction'] = TransitPostAction
globals()['TransitPreAction'] = TransitPreAction
globals()['TransitSection'] = TransitSection
globals()['TransitSpan'] = TransitSpan
globals()['TransitStop'] = TransitStop
globals()['TransitTransport'] = TransitTransport
globals()['VehicleSection'] = VehicleSection
globals()['WebLink'] = WebLink
from routing.model.router_section import RouterSection


class TestRouterSection(unittest.TestCase):
    """RouterSection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testRouterSection(self):
        """Test RouterSection"""
        # FIXME: construct object with mandatory attributes with example values
        # model = RouterSection()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
